[versioneer]
VCS = git
style = pep440
versionfile_source = {{ cookiecutter.project_slug }}/_version.py
versionfile_build = {{ cookiecutter.project_slug }}/_version.py
tag_prefix =
parentdir_prefix =

{%- set license_classifiers = {
    'NIST license': 'License :: Public Domain',
    'MIT license': 'License :: OSI Approved :: MIT License',
    'BSD license': 'License :: OSI Approved :: BSD License',
    'ISC license': 'License :: OSI Approved :: ISC License (ISCL)',
    'Apache Software License 2.0': 'License :: OSI Approved :: Apache Software License',
    'GNU General Public License v3': 'License :: OSI Approved :: GNU General Public License v3 (GPLv3)'
} %}


[metadata]
name = {{ cookiecutter.project_slug }}
author = {{ cookiecutter.full_name.replace('\"', '\\\"') }
author_email = {{ cookiecutter.email }}
{%- if cookiecutter.open_source_license in license_classifiers %}
license="{{ cookiecutter.open_source_license }}",
{%- endif %}
license = "NIST license https://www.nist.gov/director/licensing"
license_files = LICENSE
description = {{ cookiecutter.project_short_description }}
# if using markdown
# long_description_content_type = text/markdown
long_description = file: README.rst
keywords = {{ cookiecutter.project_slug }}
url = https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}
classifiers =
    Development Status :: 2 - Pre-Alpha
    License :: Public Domain
{%- if cookiecutter.open_source_license in license_classifiers %}
    {{ license_classifiers[cookiecutter.open_source_license] }}
{%- endif %}
    Operating System :: OS Independent
    Intended Audience :: Science/Research
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Topic :: Scientific/Engineering


[options]
packages = find:
zip_safe = True # if using mypy, must be False
include_package_data = True
python_requires = >=3.6
install_requires =


[aliases]
test = pytest

[tool:pytest]
addopts = --verbose
testpaths = tests


[isort]
profile = black
skip_gitignore = true
force_to_top = true
default_section = THIRDPARTY
known_first_party = {{ cookiecutter.project_slug }}

[flake8]
ignore =
    E203 # whitespace before ':' - doesn't work well with black
    E402 # module level import not at top of file
    E501 # line too long - let black worry about that
    E731 # do not assign a lambda expression, use a def
    W503 # line break before binary operator
exclude=
    .eggs
    doc
    docs

# See the docstring in versioneer.py for instructions. Note that you must
# re-run 'versioneer.py setup' after changing this section, and commit the
# resulting files.
