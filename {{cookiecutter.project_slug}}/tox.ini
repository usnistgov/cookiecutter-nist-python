[tox]
isolated_build = True
requires = tox-conda
envlist =
        # test
        test-py3{8, 9, 10, 11}

[base]
package_name = {{ cookiecutter.project_name }}
import_name  = {{ cookiecutter.project_slug }}
build_python = python3.10
conda_env            = {toxinidir}/environment.yaml
conda_env_dev        = {toxinidir}/environment/dev.yaml
conda_env_test       = {toxinidir}/environment/test.yaml
conda_env_docs       = {toxinidir}/environment/docs.yaml
conda_env_dist_pypi  = {toxinidir}/environment/dist-pypi.yaml
conda_env_dist_conda = {toxinidir}/environment/dist-conda.yaml
conda_env_lint       = {toxinidir}/environment/lint.yaml
conda_channels =
    wpk-nist
    conda-forge
conda_deps_test =
allowlist_externals =
    bash
    make
commands_test_check =
    python --version
    python -c 'import {[base]import_name}; print( {[base]import_name}.__version__)'
    bash -ec 'echo $PWD'

[testenv]
passenv =
        SETUPTOOLS_SCM_PRETEND_VERSION
        TEST_VERSION
        # general command
        command
        # linting
        mypy_args
        pyright_args
        pytype_args
        release_args
        # dist-conda stuff
        project_name
        sdist_path
        grayskull_args
        recipe_base_path
        recipe_append_path
usedevelop =
    test: True
conda_env =
    test: {[base]conda_env_test}
allowlist_externals =
    {[base]allowlist_externals}
commands =
    {[base]commands_test_check}
    {posargs:pytest}

[testenv:dev]
description =
    Create development environment.
usedevelop = True
basepython = {[base]build_python}
conda_env = {[base]conda_env_dev}
envdir = {toxworkdir}/dev
commands =
    {posargs:bash -ec 'conda list'}

[testenv:docs]
description =
    Runs make in docs directory.
    For example, 'tox -e docs -- html' -> 'make -C docs html'.
    With 'release' option, you can set the message with 'message=...' in posargs.
usedevelop = True
envdir     = {toxworkdir}/docs
basepython = {[base]build_python}
conda_env  = {[base]conda_env_docs}
changedir  = {toxinidir}/docs
commands =
    make {posargs:html}

[testenv:dist-pypi]
description  =
    Runs make -f scrips/dist-pypi.mk posargs
    For example, 'tox -e dist-pypi -- build' -> 'make -f scripts/dist-pypi.mk build'
skip_install = True
envdir       = {toxworkdir}/dist-pypi
basepython   = {[base]build_python}
conda_env    = {[base]conda_env_dist_pypi}
changedir    = {toxinidir}
commands     =
    make -f {toxinidir}/scripts/dist-pypi.mk {posargs:build}

[testenv:dist-conda]
description  =
    Runs make -C dist-conda posargs
    recipe: build conda recipe using grayskull (can optionally pass a local sdist)
    build: build conda distribution
    command: run arbitrary command
skip_install = True
envdir       = {toxworkdir}/dist-conda
basepython   = {[base]build_python}
conda_env    = {[base]conda_env_dist_conda}
changedir    = {toxinidir}
commands     =
    make -f {toxinidir}/scripts/dist-conda.mk {posargs} project_name={env:project_name:{[base]package_name}}

[testenv:testdist-{pypi, conda, condaforge}-{local,remote}-py3{8, 9, 10, 11}]
conda_channels =
    conda: {[base]conda_channels}
    condaforge: conda-forge
description =
    Test install from
    pypi: pypi
    conda: conda (user channel)
    condaforge: conda (conda-forge channel)
    using either
    local: local
    remote: remote
    versions.
skip_install = True
conda_env    = {toxinidir}/environment/test-extras.yaml
conda_deps =
    conda-remote,condaforge-remote: {[base]package_name}{env:TEST_VERSION:''}
    conda-local,condaforge-local: {posargs}
deps =
    pypi-remote: {[base]package_name}{env:TEST_VERSION:''}
    pypi-local: {posargs}

[testenv:testpip-py3{8, 9, 10, 11}]
description  =
    Test package against pip installed packages
usedevelop   = True
extras = test
conda_env    = {toxinidir}/environment/test-extras.yaml

[testenv:lint]
description =
    Run linters
    For example, 'tox -e lint -- mypy mypy_args=...' runs 'mypy $mypy_args'
conda_env = {[base]conda_env_lint}
usedevelop = True
envdir     = {toxworkdir}/lint
basepython = {[base]build_python}
commands =
    make -f {toxinidir}/scripts/lint.mk {posargs:mypy}
